Preface and Introduction

"
C retains the basic philosophy that programmers know what they are doing; it only requires that they state their intentions explicitly.

C is a general-purpose programming language, is not a big language, is not a "very high level" language, nor a "big" one, and is not specialized to any particular area of application.

C was originally designed for and implemented on the UNIX operating system on the DEC PDP-ll, by Dennis Ritchie. The operating system, the C compiler, and essentially all UNIX applications programs (including all of the software used to prepare this book) are written in C.

C is not tied to any particular hardware or system, however, and it is easy to write programs that will run without change on any machine that supports C.

Many of the important ideas of C stem from the language BCPL, developed by Martin Richards. The influence of BCPL on C proceeded indirectly through the language B, which was written by Ken Thompson in 1970 for the first UNIX system on the DEC PDP-7. BCPL and Bare "typeless" languages. By contrast, C provides a variety of data types.

Since C is relatively small, it can be described in a small space, and learned quickly. A programmer can reasonably expect to know and understand and indeed regularly use the entire language.

C, like any other language, has its blemishes. Some of the operators have the wrong precedence; some parts of the syntax could be better. Nonetheless, C has proven to be an extremely effective and expressive language for a wide variety of programming applications.
"