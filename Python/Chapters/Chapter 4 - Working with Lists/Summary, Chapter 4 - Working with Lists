/*
Author: Fernando Zuher
Place: Brazil
Date: 26/02/2020
Book: Python Crash Course, 2nd Edition
About: Summary, Chapter 4 - Working with Lists
*/

for value in values:
	print(value)

for value in range(1, 6): #from 1 to (inclusive) 5, not 6
	print(value)

for value in range(6):
	print(value) # print from 0 to (inclusive) 5

numbers = list(range(1, 6))
print(numbers) # it prints a list with 5 numbers

variable = list(range(2, 11, 2))
print(variable)

number**2
-------------------------------

min(lista)
max(lista)
sum(lista)

-------------------------------

A ***list comprehension*** combines the for loop and the creation
of new elements into one line, and automatically
appends each new element.
This:
	squares = []
	for value in range(1, 11):
		# square = value ** 2
		squares.append(value ** 2)

...is the same of this:
	squares = [value**2 for value in range(1, 11)]

------------

Python calls "slice" a specific group of items in a list:
players = [1, 2, 3, 4, 5]
print(players[0:2])
print(players[1:3])
print(players[1:])
print(players[:3])
print(players[-3:]) # This prints the names of the last three players and would continue to
work as the list of players changes in size.

Note: You can include a third value in the brackets indicating a slice. If a third value is included, this tells Python how many items to skip between items in the specified range.

# Looping Through a Slice
for player in players[:3]:
	...


# Copiando lista
lista1 = lista2[:]

--------------------------

Tuples
	A list of items that cannot change. Tuples allow you to do just that. Python refers to values that cannot change as immutable, and an immutable list is called a tuple.
	A tuple looks just like a list except you use parentheses instead of square brackets.

tupla = (200, 50)

Note: Tuples are technically defined by the presence of a comma; the parentheses make them look neater and more readable. If you want to define a tuple with one element, you need to include a trailing comma:
tupla = (200,)

----------------

Diretrizes para escrita de códigos em Python:
Indentação com 4 espaços.

Comprimento da linha de no máximo 79 or 99 caracteres.
Comentários de até 72 caracteres because some of the tools that generate automatic documentation for larger projects add formatting characters at the beginning of each commented line.

Linhas em branco para facilitar leitura.
